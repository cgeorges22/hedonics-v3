// To set up a new git repository:
$ git clone https://github.com/cgeorges22/hedonics-v3.git


// To work with git on a day to day basis:

// Enter the hedonics-v3 directory.

$ git pull

// Write code

// Add all changes
$ git add -A

// Add specific changes
$ git add file_name.ext

// Commit and push
$ git commit -m "Type a message here"
$ git push origin master


// To run our code

// Update input.txt accordingly
// Update queue.sim to indicate how many processors you would like to use
// Inside queue.sim:

#PBS -l nodes=2:ppn=8

// ppn will always be 8. nodes can be between 1 and 62

/usr/lib64/mvapich2/bin/mpiexec -np 16 ./queue_sim input.txt

// After -np, type the total number of processors; ie. nodes x ppn

// Run the following commands

$ module load mpi/mvapich2-x86_64     // load mpi
$ make clean
$ make                                // compile the program
$ qsub queue_sim                      // add the program to the hpc queue

$ showq                               // get information about the queue
$ qstat                               // ditto

// ADDING DATA OUTPUTS

// In simulation_helper.cpp, increase dataNum if needed. Currently, there are 5 data files 
// being created but only data4 and data5 are being used. 

// In master_slave_hedonics.h, use the following code when you want to output
// Let X be the data file number for for data1, x=1

// use function to_string() to convert any type to a string
string dataX_to_output = (string_to_output);    
MPI_Status io_status;
MPI_File_write_shared(file[X-1], dataX_to_output.c_str(), dataX_to_output.size(), MPI_CHAR, &io_status);
